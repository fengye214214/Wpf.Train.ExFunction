<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Wpf.Train.CustomControlLib">

    <!--必须用DynamicResource，使用资源中的Key值，把颜色属性提取出一个单独的资源文件用StaticResource会出现：“{DependencyProperty.UnsetValue}”不是属性“Background”的有效值。的错误-->
    <!--新加的控件要增加到ControlsDictionary.xaml资源字典中-->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Wpf.Train.CustomControlLib;component/Style/FIcon.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <!--Region 默认模板-->
    <ControlTemplate x:Key="ImgButtonDefaultTemplate" TargetType="{x:Type local:ImgButton}">
        <!--按钮样式-->
        <Border x:Name="Bd" Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Background}" 
                                    Height="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Height}" 
                                    CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=CornerRadius}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                    Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Width}">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center"  Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                <!--图片-->
                <TextBlock x:Name="icon" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Style="{StaticResource FIcon}" Margin="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= FIconMargin}"
                                       Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Foreground}"
                                       Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= FIcon}"
                                       FontSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= FIconSize}">
                    <TextBlock.RenderTransform>
                        <RotateTransform x:Name="transIcon" Angle="0"/>
                    </TextBlock.RenderTransform>
                </TextBlock>
                <!--文字-->
                <TextBlock VerticalAlignment="Center"  x:Name="txt" Margin="0,0,5,0"
                                               Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}" 
                                               FontSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=FontSize}" 
                                               Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Foreground}"/>
            </StackPanel>
        </Border>
        <ControlTemplate.Triggers>
            <!--鼠标进入按钮背景和文字颜色-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, 
                                Path=MouseOverBackground}" TargetName="Bd" />
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, 
                                Path=MouseOverFIconForeground}" TargetName="icon"/>
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, 
                                Path=MouseOverFIconForeground}" TargetName="txt"/>
            </Trigger>
            <!--图片的动画显示-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsAnimation" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="Angle" To="180" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="Angle" To="0" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--EndRegion-->
    
    <!--Region 默认样式-->
    <Style x:Key="ImgButtonDefaultStyle" TargetType="{x:Type local:ImgButton}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}"/>
        <Setter Property="MouseOverFIconForeground" Value="{DynamicResource ButtonForeground}"/>
        <Setter Property="FontFamily" Value="{DynamicResource ButtonFontFamily}"/>
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
        <Setter Property="MouseOverBackground" Value="{DynamicResource ButtonMouseOverBackground}"/>
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="Template" Value="{StaticResource ImgButtonDefaultTemplate}"/>
    </Style>
    <!--EndRegion-->

    <!--Region 只显示图片的样式-->
    <Style x:Key="ImgButtonOnlyShowImage" TargetType="{x:Type local:ImgButton}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonBackground}"/>
        <Setter Property="MouseOverFIconForeground" Value="{DynamicResource ButtonForeground}"/>
        <Setter Property="FontFamily" Value="{DynamicResource ButtonFontFamily}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="MouseOverBackground" Value="{DynamicResource ButtonMouseOverBackground}"/>
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="Template" Value="{StaticResource ImgButtonDefaultTemplate}"/>
    </Style>
    <!--Endregion-->


    <!--默认样式-->
    <Style TargetType="{x:Type local:ImgButton}" BasedOn="{StaticResource ImgButtonDefaultStyle}"/>

</ResourceDictionary>
