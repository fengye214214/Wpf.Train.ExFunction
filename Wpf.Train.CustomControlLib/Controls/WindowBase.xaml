<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:shell="http://schemas.microsoft.com/winfx/2006/xaml/presentation/shell"
                    xmlns:local="clr-namespace:Wpf.Train.CustomControlLib">

    <!--必须用DynamicResource，使用资源中的Key值，把颜色属性提取出一个单独的资源文件用StaticResource会出现：“{DependencyProperty.UnsetValue}”不是属性“Background”的有效值。的错误-->
    <!--新加的控件要增加到ControlsDictionary.xaml资源字典中-->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Wpf.Train.CustomControlLib;component/Style/BaseThemes/Button.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--默认模板-->
    <ControlTemplate x:Key="WindowBaseDefaultTemplate" TargetType="{x:Type local:WindowBase}">
        <Grid x:Name="PATH_Grid" Margin="5">
            <!--窗体边框-->
            <Border BorderBrush="{TemplateBinding BorderBrush}"  BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                     SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Effect="{DynamicResource WindowDropShadow}"></Border>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <!--标题 此处的Margin是为了边框-->
                <Border x:Name="PATH_Header_Border" Grid.Row="0" Margin="1 1 1 0" Background="{TemplateBinding CaptionBackground}">
                    <Grid >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <!--标题栏左侧汉字-->
                        <StackPanel x:Name="PART_Header" Height="{TemplateBinding CaptionHeight}" Margin="5 0 0 0" Orientation="Horizontal"  VerticalAlignment="Center">
                            <!--这样做的目的是字体颜色跟谁系统-->
                            <Label>
                                <TextBlock VerticalAlignment="Center" Margin="0 0 0 0" FontSize="{TemplateBinding HeaderFontSize}" Text="{TemplateBinding Title}"/>
                            </Label>
                        </StackPanel>
                        <!--右侧关闭按钮-->
                        <StackPanel x:Name="PART_HeaderClose" Grid.Column="1" Height="{TemplateBinding CaptionHeight}" Orientation="Horizontal" VerticalAlignment="Center">
                            <Button  Cursor="Hand" shell:WindowChrome.IsHitTestVisibleInChrome="True" Style="{StaticResource ButtonImgStyle}" ToolTip="关闭"
                                    Command="{Binding Path=CloseWindowCommand,RelativeSource={RelativeSource TemplatedParent}}">
                                <Image Margin="5" Source="pack://application:,,,/Wpf.Train.CustomControlLib;component/ImgResources/mainwnd_close.png"></Image>
                            </Button>
                        </StackPanel>
                    </Grid>
                </Border>
                <!--窗体区域内容-->
                <AdornerDecorator Grid.Row="1" Margin="0">
                    <ContentPresenter Content="{TemplateBinding Content}"/>
                </AdornerDecorator>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="WindowState" Value="Maximized">
                <!--最大化后调节一下下边框的边界-->
                <Setter TargetName="PATH_Grid" Property="Margin" Value="5 5 5 4"/>
            </Trigger>
            <!--当标题栏高度为0时，隐藏标题栏内容-->
            <Trigger Property="CaptionHeight" Value="0">
                <Setter TargetName="PATH_Header_Border" Property="Visibility" Value="Collapsed"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <!--默认样式-->
    <Style x:Key="WinNoBorderStyle" TargetType="{x:Type local:WindowBase}">
        <Setter Property="Background" Value="{DynamicResource SysWindowBackground}"/>
        <Setter Property="Width" Value="480"/>
        <Setter Property="Height" Value="320"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="ResizeMode" Value="CanResize"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SysWindowBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CaptionHeight" Value="0"/>
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome  CaptionHeight="{Binding Path=CaptionHeight,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type local:WindowBase}}}" 
                                     ResizeBorderThickness="5"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template" Value="{StaticResource WindowBaseDefaultTemplate}"/>
    </Style>

    <Style x:Key="WinContainTitleStyle" TargetType="{x:Type local:WindowBase}">
        <Setter Property="Background" Value="{DynamicResource SysWindowBackground}"/>
        <Setter Property="Width" Value="480"/>
        <Setter Property="Height" Value="320"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="ResizeMode" Value="CanResize"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SysWindowBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <!--标题栏高度-->
        <Setter Property="CaptionHeight" Value="25"/>
        <!--标题栏背景-->
        <Setter Property="CaptionBackground" Value="{DynamicResource SysWindowCaptionBackground}"/>
        <!--标题栏字体大小-->
        <Setter Property="HeaderFontSize" Value="12"/>
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome  CaptionHeight="{Binding Path=CaptionHeight,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type local:WindowBase}}}" 
                                     ResizeBorderThickness="5"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template" Value="{StaticResource WindowBaseDefaultTemplate}"/>
    </Style>

    <!--默认样式-->
    <Style TargetType="{x:Type local:WindowBase}" BasedOn="{StaticResource WinNoBorderStyle}"/>
</ResourceDictionary>
